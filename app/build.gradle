plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.apollographql.apollo3").version("3.1.0")
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.zerir.robusta"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'APP_KEY', localProperties['app_key']
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    /** projects */
    implementation(
            project(":CalendarView"),
            project(":View")
    )

    /** activity ext */
    implementation 'androidx.activity:activity-ktx:1.4.0'

    /** Lifecycle */
    def lifecycleExtVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtVersion"

    /** Epoxy */
    def epoxyVersion = '5.0.0-beta05'
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"
    implementation(
            "com.airbnb.android:epoxy:$epoxyVersion",
            "com.airbnb.android:epoxy-databinding:$epoxyVersion",
    )

    /** Rx */
    def rxVersion = '3.0.1'
    def rxAndroidVersion = '3.0.0'
    implementation(
            "io.reactivex.rxjava3:rxkotlin:$rxVersion",
            "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion",
    )

    /** Retrofit */
    def retrofitVersion = "2.9.0"
    def okhttp3Version = '5.0.0-alpha.5'
    implementation(
            "com.squareup.retrofit2:retrofit:$retrofitVersion",
            "com.squareup.retrofit2:adapter-rxjava3:$retrofitVersion",
            "com.squareup.retrofit2:converter-moshi:$retrofitVersion",
            "com.squareup.okhttp3:logging-interceptor:$okhttp3Version",
    )

    /** Glide */
    def glideVersion = '4.13.1'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    /** koin */
    def koinVersion = "3.1.5"
    implementation"io.insert-koin:koin-android:$koinVersion"

    /** apollo */
    def apolloVersion = "3.1.0"
    implementation(
            "com.apollographql.apollo3:apollo-runtime:$apolloVersion",
            "com.apollographql.apollo3:apollo-rx3-support:$apolloVersion",
    )

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

/** needed for epoxy */
kapt {
    correctErrorTypes = true
}

/** needed for apollo */
apollo {
    packageName.set("com.zerir.robusta")
}